<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Review on Run</title>
    <link>https://LeiBuDao.github.io/tags/review/</link>
    <description>Recent content in Review on Run</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 21 Dec 2021 15:04:19 +0800</lastBuildDate><atom:link href="https://LeiBuDao.github.io/tags/review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>软件体系结构期末复习</title>
      <link>https://LeiBuDao.github.io/posts/safinalexam/</link>
      <pubDate>Tue, 21 Dec 2021 15:04:19 +0800</pubDate>
      
      <guid>https://LeiBuDao.github.io/posts/safinalexam/</guid>
      <description>第一章—软件体系结构概述 1、软件体系结构的主要思想  软件架构是一个软件系统的设计图，并不局限于软件系统的总体结构，还包含一些质量属性以及功能与结构之间的映射关系，即设计决策。 软件架构的两个主要焦点集中于系统的总体结构以及需求和实现之间的对应。 软件架构的主要思想是将注意力集中在系统总体结构的组织上。  2、软件架构的特征    特征 实现方式 作用     注重可重用性 组件及架构级重用 提高软件质量   利益相关者众多 满足各利益相关者需求 平衡需求   关注点分离 分而治之、模块化 简化复杂性   质量驱动 使用软件架构来处理质量属性需求、控制复杂性 由功能、数据流驱动向质量驱动转变   概念完整性 强调设计决策是一个持续的过程 每个决策都要在其前面设计决策的基础上进行   循环风格 架构风格、架构模式 用标准方法来处理反复出现的问题    3、软件架构的发展阶段  （1）无体系结构  ​ 高级语言出现
  （2）基础研究阶段（1968-1994）
​ 面向过程开发
  （3）核心技术形成（1991-2000）
  ​ 面向对象开发
​ 1）软件架构作为一个独立的研究领域出现
​ 2）软件架构核心技术的发展</description>
    </item>
    
  </channel>
</rss>
